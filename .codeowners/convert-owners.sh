#!/bin/bash

#
# Copyright 2010-2025 JetBrains s.r.o. and Kotlin Programming Language contributors.
# Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
#

# Script to convert intermediate OWNERS file to GitHub and Space CODEOWNERS
# 1. Copies OWNERS file to .github and .space directory
# 2. Replaces team owners such as "Kotlin Build Infrastructure" with their GitHub team equivalent for GitHub CODEOWNERS
# 3. If given Space team is in "virtual-team-mapping.json", "virtualMembers" field is used instead of the GitHub team
# 4. All teams and individual owners are added to OWNER_LIST directive in Space CODEOWNERS

# Make the script execution relative to project root
PARENT_PATH=$( cd "$(dirname "${BASH_SOURCE[0]}")" || exit 1 ; pwd -P )
cd "$PARENT_PATH" || exit 1

# Path to the input and output files
OWNERS_FILE="../.codeowners/OWNERS"
GITHUB_CODEOWNERS_FILE="../.github/CODEOWNERS"
SPACE_CODEOWNERS_FILE="../.space/CODEOWNERS"
TEAM_MAPPING_FILE="../.codeowners/virtual-team-mapping.json"

# Check if the required files exist
if [ ! -f "$OWNERS_FILE" ]; then
    echo "Error: $OWNERS_FILE does not exist"
    exit 1
fi

if [ ! -f "$TEAM_MAPPING_FILE" ]; then
    echo "Error: $TEAM_MAPPING_FILE does not exist"
    exit 1
fi

# Create a temporary file for GitHub CODEOWNERS file
GITHUB_TMP_FILE=$(mktemp)

# Create a temporary file for team mappings
MAPPINGS_FILE=$(mktemp)

# Header text for generated files
HEADER="# Auto-generated file. DO NOT EDIT!\n# Generated by '.codeowners/convert-owners.sh' script\n\n"

# Extract team mappings from JSON file
jq -r '.[] | "\(.spaceTeam)|\(.virtualMembers | join(","))"' "$TEAM_MAPPING_FILE" > "$MAPPINGS_FILE"

# Process the OWNERS file line by line
while IFS= read -r line; do
    # Skip empty lines
    if [[ -z "$line" ]]; then
        echo "$line" >> "$GITHUB_TMP_FILE"
        continue
    fi

    # Start with the original line
    processed_line="$line"

    # Extract all team names in quotes and process them
    while [[ "$processed_line" =~ \"([^\"]*)\" ]]; do
        team_pattern="\"${BASH_REMATCH[1]}\""
        team_name="${BASH_REMATCH[1]}"

        # Check if the team has virtual members in the mappings
        virtual_members=""
        grep -q "^$team_name|" "$MAPPINGS_FILE" && virtual_members=$(grep "^$team_name|" "$MAPPINGS_FILE" | cut -d'|' -f2)

        # If team has virtual members, use them, otherwise use GitHub team name
        if [[ -n "$virtual_members" && "$virtual_members" != "null" ]]; then
            # Replace commas with spaces in virtual members
            virtual_members="${virtual_members//,/ }"
            # Replace the team name with its virtual members
            processed_line="${processed_line//$team_pattern/$virtual_members}"
        else
            # Construct GitHub team name from team_name (lowercase, replace whitespaces with dash, prepend "@JetBrains/")
            github_team="@JetBrains/$(echo "$team_name" | tr '[:upper:]' '[:lower:]' | tr ' ' '-')"
            # Replace the team name with its GitHub team equivalent
            processed_line="${processed_line//$team_pattern/$github_team}"
        fi
    done

    echo "$processed_line" >> "$GITHUB_TMP_FILE"
done < "$OWNERS_FILE"

# Copy the processed file to the GitHub destination with header
printf "$HEADER" > "$GITHUB_CODEOWNERS_FILE"
cat "$GITHUB_TMP_FILE" >> "$GITHUB_CODEOWNERS_FILE"

# Create a temporary file for the Space CODEOWNERS file
SPACE_TMP_FILE=$(mktemp)
# Extract all team names from OWNERS file
SPACE_TEAMS=$(grep -o '"[^"]*"' "$OWNERS_FILE" | sort -u | tr '\n' ' ')
# Extract all individual users from the OWNERS file (assuming they are always email addresses)
INDIVIDUAL_USERS=$(grep -o '[[:alnum:]._%+-]\+@[[:alnum:].-]\+\.[[:alpha:]]\+' "$OWNERS_FILE" | sort -u | tr '\n' ' ')

{
  printf "$HEADER"
  echo "# OWNER_LIST: $SPACE_TEAMS"
  echo "# OWNER_LIST: $INDIVIDUAL_USERS"
  echo ""
  cat "$OWNERS_FILE"
} >> "$SPACE_TMP_FILE"

# Copy the Space CODEOWNERS file to the destination
cp "$SPACE_TMP_FILE" "$SPACE_CODEOWNERS_FILE"

# Clean up
rm "$GITHUB_TMP_FILE"
rm "$MAPPINGS_FILE"
rm "$SPACE_TMP_FILE"

echo "Conversion completed. CODEOWNERS files created at $GITHUB_CODEOWNERS_FILE and $SPACE_CODEOWNERS_FILE"

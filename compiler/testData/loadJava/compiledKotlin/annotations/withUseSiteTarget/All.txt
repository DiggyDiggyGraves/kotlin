package test

public final annotation class Default : kotlin.Annotation {
    /*primary*/ public constructor Default()
}

@kotlin.annotation.Target(allowedTargets = {AnnotationTarget.PROPERTY_SETTER, AnnotationTarget.PROPERTY_GETTER, AnnotationTarget.FUNCTION}) public final annotation class Function : kotlin.Annotation {
    /*primary*/ public constructor Function()
}

public final data class MyRecord {
    /*primary*/ public constructor MyRecord(/*0*/ x: kotlin.String)
    public final val x: kotlin.String
        public final fun `<get-x>`(): kotlin.String
    public final operator /*synthesized*/ fun component1(): kotlin.String
    public final /*synthesized*/ fun copy(/*0*/ x: kotlin.String = ...): test.MyRecord
}

public object O {
    /*primary*/ private constructor O()
    public final val x: kotlin.Int = 0
        public final fun `<get-x>`(): kotlin.Int
    public final var y: kotlin.Int
        public final fun `<get-y>`(): kotlin.Int
        public final fun `<set-y>`(/*0*/ param: kotlin.Int): kotlin.Unit
}

@kotlin.annotation.Target(allowedTargets = {AnnotationTarget.FIELD, AnnotationTarget.PROPERTY}) public final annotation class Prop : kotlin.Annotation {
    /*primary*/ public constructor Prop()
}

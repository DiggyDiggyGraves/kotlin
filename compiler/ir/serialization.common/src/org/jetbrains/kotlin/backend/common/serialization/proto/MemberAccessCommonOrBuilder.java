// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: compiler/ir/serialization.common/src/KotlinIr.proto
// Protobuf Java Version: 4.29.3

package org.jetbrains.kotlin.backend.common.serialization.proto;

public interface MemberAccessCommonOrBuilder extends
    // @@protoc_insertion_point(interface_extends:org.jetbrains.kotlin.backend.common.serialization.proto.MemberAccessCommon)
    org.jetbrains.kotlin.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * Value argument serialization scheme after 2.2.0
   * </pre>
   *
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.NullableIrExpression argument = 6 [features = { ... }</code>
   */
  java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.NullableIrExpression> 
      getArgumentList();
  /**
   * <pre>
   * Value argument serialization scheme after 2.2.0
   * </pre>
   *
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.NullableIrExpression argument = 6 [features = { ... }</code>
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.NullableIrExpression getArgument(int index);
  /**
   * <pre>
   * Value argument serialization scheme after 2.2.0
   * </pre>
   *
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.NullableIrExpression argument = 6 [features = { ... }</code>
   */
  int getArgumentCount();

  /**
   * <pre>
   * Value argument serialization scheme before 2.2.0
   * </pre>
   *
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression dispatch_receiver = 1;</code>
   * @return Whether the dispatchReceiver field is set.
   */
  boolean hasDispatchReceiver();
  /**
   * <pre>
   * Value argument serialization scheme before 2.2.0
   * </pre>
   *
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression dispatch_receiver = 1;</code>
   * @return The dispatchReceiver.
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression getDispatchReceiver();

  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression extension_receiver = 2;</code>
   * @return Whether the extensionReceiver field is set.
   */
  boolean hasExtensionReceiver();
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression extension_receiver = 2;</code>
   * @return The extensionReceiver.
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression getExtensionReceiver();

  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.NullableIrExpression regular_argument = 3 [features = { ... }</code>
   */
  java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.NullableIrExpression> 
      getRegularArgumentList();
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.NullableIrExpression regular_argument = 3 [features = { ... }</code>
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.NullableIrExpression getRegularArgument(int index);
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.NullableIrExpression regular_argument = 3 [features = { ... }</code>
   */
  int getRegularArgumentCount();

  /**
   * <code>repeated int32 type_argument = 4 [features = { ... }</code>
   * @return A list containing the typeArgument.
   */
  java.util.List<java.lang.Integer> getTypeArgumentList();
  /**
   * <code>repeated int32 type_argument = 4 [features = { ... }</code>
   * @return The count of typeArgument.
   */
  int getTypeArgumentCount();
  /**
   * <code>repeated int32 type_argument = 4 [features = { ... }</code>
   * @param index The index of the element to return.
   * @return The typeArgument at the given index.
   */
  int getTypeArgument(int index);
}